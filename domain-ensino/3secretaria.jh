entity CategoriaAluno {
	nome String required unique,
	desconto Double required, // porcetagem
	pagaPropina Boolean,
	pagaMulta Boolean,
	descricao TextBlob,
	diaPagamento Integer min(1),
	mesAtual Boolean,
	ativo Boolean
}

entity Pessoa {
    nome String required,
    imagem ImageBlob,
    pai String,
    mae String,
    nascimento LocalDate,
    
    // contacto
    contactoPrincipal String unique required,
    contactoSecundario String unique,
    email String unique,
    
    // documentacao
    numeroDocumento String unique,
    nif String unique,
    emissao LocalDate,
    validade LocalDate,
    
    // Morada
    bairro String,
    rua String maxlength(200),
    quarteirao String maxlength(10),
    numeroPorta String maxlength(10)
}

entity RelacionamentoPessoa {
}

// ocoorencias sao do tipo de ocoorencia: falta na aula, luta na escola, nao tem material, suspernsao

entity Ocorrencia {
	data ZonedDateTime required,
	numero String unique required,
	reportarEncarregado Boolean required,
	de LocalDate,
	ate LocalDate,
	descricao TextBlob required
}

entity Aluno {
	numeroProcesso String unique required,
	
	// Ficha medica
	fazEducacaoFisica Boolean required,
    grupoSanguinio String,
	autorizaMedicamento Boolean required,
	altura Integer,
	peso Double,
	nomeMedico String,
	contactoMedico String,
	desmaioConstante Boolean,
    complicacoesSaude TextBlob,
    
	// Escola anterior
	transferido Boolean required,
	turmaAnterior String,
	anoConclusao Integer,
	numeroProcessoAnterior String,
    
    observacao TextBlob, // Actividades em tempo livre, habilidades, competencias
	data ZonedDateTime
}

entity SituacaoAcademica {
	anoLectivo Integer,
	data ZonedDateTime,
	descricao TextBlob
}

entity Matricula {
	data ZonedDateTime,
	numeroChamada Integer min(1) required,

    anoLectivo Integer required,
    
    // Documentos entregue
    fotografia Boolean required,
	certificado Boolean required,
	bilhete Boolean required,
	resenciamentoMilitar Boolean,
	cartaoVacina Boolean,
	atestadoMedico Boolean,
	fichaTransferencia Boolean,
	historicoEscolar Boolean,
	cedula Boolean,
	
	observacao TextBlob
}

/**************************************************/
/**
 * One to many relationship.
 */
relationship OneToMany {
    Aluno to Matricula{aluno(numeroProcesso) required},
    CategoriaAluno to Matricula{categoria(nome) required},
    Aluno to Ocorrencia{matricula(numeroProcesso) required},
	Aluno to SituacaoAcademica{aluno(numeroProcesso)},
	Turma to Matricula{turma(descricao) required },
	Lookup to Ocorrencia{tipoOcorrencia(nome) required }, // FALATA, BRIGA, MATERIAL
	Lookup to Pessoa{tipoDocumento(nome)}, // BI, CEDULA, PASSAPORTE
	Lookup to Pessoa{nacionalidade(nome)},
	Lookup to Pessoa{provincia(nome)},
	Lookup to Pessoa{municipio(nome)},
	Lookup to Pessoa{naturalidade(nome)},
	Lookup to Pessoa{localEmissao(nome)},
	Lookup to Pessoa{profissao(nome)},
	Lookup to Pessoa{cargo(nome)},
	Lookup to Pessoa{empresa(nome)},
	Lookup to RelacionamentoPessoa{grauParentesco(nome) required },
	Lookup to Aluno{meioTrnasporte(nome)}, // A PÃ‰, TAXI
	Lookup to Aluno{alergia(nome)}, // NEHUMA
	Lookup to Aluno{dificienca(nome)}, // NEHUMA
	Curso to Aluno{cursoAnterior(nome)},
	Lookup to Aluno{escolaAnterior(nome)},
	Lookup to Aluno{classeAnterior(nome)},
	Lookup to Pessoa{situacaoAnterior(nome)},
	Lookup to SituacaoAcademica{disciplina(nome)},
	Lookup to SituacaoAcademica{classe(nome)},
	Lookup to SituacaoAcademica{periodoLectivo(nome)}, // ANUAL, I, II, II, Tri
	Lookup to Matricula{periodoLectivo(nome)}, // ANUAL, I, II, II, Tri
	Lookup to SituacaoAcademica{situacaoAcademica(nome)} // APROVADO, REPROVADO, RECURSO
	
}

/**
 * One to one relationship.
 */
relationship OneToOne {
	Aluno{pessoa(nome) required } to Pessoa,
	Pessoa{utilizador(login)} to User
}

/**
 * Many to one relationship.
 */
relationship ManyToOne {
	Matricula{funcionario(login)} to User,
	Ocorrencia{funcionario(login)} to User,
    RelacionamentoPessoa{pessoa(nome) required} to Pessoa,
    RelacionamentoPessoa{parente(nome) required} to Pessoa
}

dto * with mapstruct
paginate * with pagination
service * with serviceClass
search * with elasticsearch
filter Pessoa, Aluno, Matricula